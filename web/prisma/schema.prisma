generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  password  String
  points    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  events          Event[]
  participations  EventParticipant[]

  comments        EventComment[]
}

model Event {
  id        String   @id @default(cuid()) // イベントID（主キー）: 文字列の一意識別子
  title     String                      // タイトル: イベント名
  imageUrl  String?                     // 画像URL: 代表画像を外部ストレージに置き、そのURLを保存
  description String?                   // 説明: イベント詳細テキスト（任意）
  createdAt DateTime @default(now())    // 投稿時間: レコード作成時刻
  updatedAt DateTime @updatedAt         // 更新日時: レコード更新時に自動更新
  eventstartDay DateTime                // イベント初日: レコード更新時に自動更新
  eventfinishDay DateTime                // イベント初日: レコード更新時に自動更新

  latitude    Float
  longitude   Float

  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id], onDelete: SetNull)

  participations EventParticipant[]
  comments       EventComment[]
}

model EventParticipant {
  user      User   @relation(fields: [userId], references: [id])
  userId    String

  event     Event  @relation(fields: [eventId], references: [id])
  eventId   String

  createdAt DateTime @default(now())

  @@id([userId, eventId])
  @@index([eventId])
  @@index([userId])
}

model EventComment {
  id        String   @id @default(cuid())
  body      String
  authorId  String?  
  author    User?    @relation(fields: [authorId], references: [id], onDelete: SetNull)

  eventId   String
  event     Event    @relation(fields: [eventId], references: [id])

  createdAt DateTime @default(now())

  @@index([authorId])
  @@index([eventId])
}
